// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

  model User {
    id String @id @default(uuid())
    age Int
    name String
    email String @unique
    role Role @default(BASIC)
    preferences Json
    writtenPosts Post[] @relation("WrittenPosts")
    favoritePosts Post[] @relation("FavoritePosts")
    UserPreference UserPreference?

    @@unique([name, age])
    @@index([email])
  }

  model UserPreference {
    id String @id @default(uuid())
    emailUpdates Boolean
    user User @relation(fields: [userId], references: [id])
    userId String @unique
  }

  model Post {
    id String @id @default(uuid())
    title String
    averageRating Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    author User @relation("WrittenPosts", fields: [authorId], references: [id])
    authorId String
    favoriteBy User? @relation("FavoritePosts", fields: [favoriteById], references: [id])
    favoriteById String?
    category Category[]
  }

  model Category {
    id String @id @default(uuid())
    name String
    posts Post[]
  }

  enum Role {
    ADMIN
    EDITOR
    BASIC
  }
